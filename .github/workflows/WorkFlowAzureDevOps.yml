name: AVRO-CI
on:
  push:
    branches:
      - main
    paths:
     - 'idl/**'
env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  AVRO_VERSION: 1.11.0
  AVRO_MIRROR: https://apache.zero.com.ar/avro
  REGISTRY_URL: http://nlt-service-registry.apps.ocpnltools.clusters.nalabs.ml
  GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }} 
  AZURE_ARTIFACTS_FEED_URL: https://pkgs.dev.azure.com/andreani/_packaging/andreani/nuget/v3/index.json   
  BUILD_CONFIGURATION: 'Release'    # set this to the appropriate build configuration
  DOTNET_VERSION: '3.1.x'
  DIRECORY_SRC: './src'
jobs:
  gen-nuget:
    name: "Generate Libs"
    runs-on: ubuntu-latest
    env:
      working-directory: 'lang/csharp/Trazas/Integracion/Esquemas'
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.401
        env:  
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }}   
      - uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
          java-package: jre # (jre, jdk, or jdk+fx) - defaults to jdk
          architecture: x64 # (x64 or x86) - defaults to x64
      - name: Get Avro Tools
        #run: wget --quiet $AVRO_MIRROR/avro-$AVRO_VERSION/java/avro-tools-$AVRO_VERSION.jar
        run: wget --quiet ${{env.AVRO_MIRROR}}/avro-${{env.AVRO_VERSION}}/java/avro-tools-${{env.AVRO_VERSION}}.jar
      - name: Get Avro Gen
        run: dotnet tool install Apache.Avro.Tools --version $AVRO_VERSION --global
      - name: Generate Protocol
        run: java -jar avro-tools-$AVRO_VERSION.jar idl idl/EventosDeTraza.avdl EventosDeTraza.avpr
      - name: AvroGen
        run: avrogen -p EventosDeTraza.avpr lang/csharp/Trazas

      - name: Restore dependencies
        run: dotnet restore
        working-directory: ${{env.working-directory}}
      - name: Build
        run: dotnet build --configuration Release --no-restore
        working-directory: ${{env.working-directory}}
      - name: Pack
        run: dotnet pack --no-build -c Release -o ../../../../../artifacts --version-suffix $GITHUB_RUN_ID
        working-directory: ${{env.working-directory}}

  az-artifacts-build-and-deploy:
    needs: gen-nuget
    runs-on: ubuntu-latest
    steps:
      # Checkout the repo
      - uses: actions/checkout@v2

      # Setup .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.AZURE_ARTIFACTS_FEED_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.AZURE_ARTIFACTS_PAT }} 

      # Run dotnet build and package
      - name: dotnet build and publish
        run: |
          dotnet restore
          dotnet build --configuration '${{ env.BUILD_CONFIGURATION }}'
          dotnet pack -c '${{ env.BUILD_CONFIGURATION }}' ../../../../../artifacts --version-suffix $GITHUB_RUN_ID
        working-directory: ${{ env.DIRECORY_SRC }}

      # Publish the package to Azure Artifacts
      - name: 'dotnet publish'
        run: dotnet nuget push --api-key ${{ secrets.AZURE_ARTIFACTS_PAT }} ../../../../../artifacts/*.nupkg
        working-directory: ${{ env.DIRECORY_SRC }}



